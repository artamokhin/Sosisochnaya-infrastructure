---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sausage-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    meta.helm.sh/release-name: sausage
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: sausage-frontend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"


spec:
  revisionHistoryLimit: 15
  replicas: {{ .Values.replicas }}
  # Стратегия развёртывания. Recreate — удалит сначала все старые Pod'ы
  # Есть и более гибкая стратегии, например, RollingUpdate, которая будет обновлять Pod'ы порциями
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.image }}:{{.Values.tag }}"
          imagePullPolicy: Always
          resources:
{{ toYaml .Values.resources | indent 12}}
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
          ports:
            - name: frontend
              containerPort: 80
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - frontend
      imagePullSecrets:
        - name: docker-config-secret
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf

